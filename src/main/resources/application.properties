server.port=${PORT:8081}
spring.datasource.url=${JDBC_DATABASE_URL\:jdbc\:h2\:mem\:order}
spring.datasource.username=${JDBC_DATABASE_USERNAME\:sa}
spring.datasource.password=${JDBC_DATABASE_PASSWORD\:}
spring.datasource.dbcp2.validation-query=select 1
spring.datasource.h2.console.enabled=true
spring.datasource.h2.console.path=/h2-console
logging.level.org.thymeleaf=DEBUG
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.id.new_generator_mappings=true

error.handling.http-status-in-json-response=true
error.handling.exception-logging=NO_LOGGING
error.handling.full-stacktrace-http-statuses=5xx
error.handling.log-levels.5xx=ERROR
error.handling.codes.UserUsernameUnique=USER_USERNAME_UNIQUE
springdoc.pathsToMatch=/api/**

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group-two
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.LongDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.thymeleaf.check-template-location=false